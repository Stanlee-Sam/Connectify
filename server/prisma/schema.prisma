// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String      @id @default(uuid())
  firstName     String
  lastName      String
  email         String      @unique
  password      String
  picturePath   String?
  location      String?
  occupation    String?
  viewedProfile Int         @default(0)
  impressions   Int         @default(0)
  friends       User[]      @relation("UserFriends")
  friendsOf     User[]      @relation("UserFriends")
  posts         Post[]      @relation("PostAuthor")
  comments      Comment[]   @relation("CommentAuthor")
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  postId    String
  authorId  String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  author    User     @relation("CommentAuthor", fields: [authorId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id              String     @id @default(uuid())
  userId          String
  firstName       String
  lastName        String
  location        String
  description     String
  userPicturePath String
  picturePath     String
  likes           Json       @default("{}")
  authorId        String
  author          User       @relation("PostAuthor", fields: [authorId], references: [id], onDelete: Cascade)
  comments        Comment[]
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

// model Profile {
//   id        Int    @id @default(autoincrement())
//   bio       String
//   userId    Int    @unique
//   user      User   @relation(fields: [userId], references: [id])
// }

// model Comment {
//   id        Int      @id @default(autoincrement())
//   content   String
//   postId    Int
//   authorId  Int
//   post      Post     @relation(fields: [postId], references: [id])
//   author    User     @relation(fields: [authorId], references: [id])
//   createdAt DateTime @default(now())
// }
